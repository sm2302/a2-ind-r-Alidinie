pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(2, 4, 5, 2)
pareto_dev(13, 0.5, x)
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
(f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
{f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
{f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf(30, 2, 4)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(2, 4, 5, 2)
pareto_dev(13, 0.5, x)
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
{f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf(30, 2, 4)
# Q2 ---------------------------------------------------------------------------
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(2, 4, 5, 2)
pareto_dev(13, 0.5, x)
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
{f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf(30, 2, 4)
# Q2 ---------------------------------------------------------------------------
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(2, 4, 5, 2)
pareto_dev(13, 0.5, x)
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
{f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf(30, 2, 4)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <-  -2*sumlogf
print(D)
}
x <- c(2, 4, 5, 2)
pareto_dev(13, 0.5, x)
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <-  -2*.sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <-  -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <-  -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <-  -2*sumlogf
D
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <-  -2*sumlogf
D
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
D
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(10, 0.5, x)
x <- c(1, 2, 3, 4)
pareto_dev(10, 1, x)
x <- c(1)
pareto_dev(10, 1, x)
pareto_dev(10, 1, x)
x <- c(1, 2, 3, 4)
pareto_dev(10, 1, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf * logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(10, 1, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf+logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(10, 1, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf+logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 1, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf+logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf+logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf+logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
{f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf(30, 2, 4)
# Q2 ---------------------------------------------------------------------------
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf+logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1, 2, 3, 4)
pareto_dev(13, 0.5, x)
x <- c(1:4)
pareto_dev(13, 0.5, x)
x <- c(1:100)
pareto_dev(13, 0.5, x)
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
{f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf(30, 2, 4)
# Q2 ---------------------------------------------------------------------------
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
{f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf(30, 2, 4)
# Q2 ---------------------------------------------------------------------------
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
# Load libraries ---------------------------------------------------------------
library(tidyverse)
# any other libraries...
# Q1 ---------------------------------------------------------------------------
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
{f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf(30, 2, 4)
# Q2 ---------------------------------------------------------------------------
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
#Q3-----------------------------------------------------------------------------
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
D
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
X <- read.table("20b9045.txt")
X <- read.table("20b9045.txt")
View(X)
View(X)
pareto_pdf <- function(x, alpha, beta) {
# creating condition for when alpha and beta is less than or equal to zero
if ( alpha <= 0 || beta <= 0 )
{stop("alpha and/or beta is less than or equal to zero")}
# inputting given formulas
if (x >= beta)
{f <- (alpha * beta ^ alpha) / x ^ (alpha + 1)}
else if (x < beta)
{f <- 0}
print(f)
}
pareto_pdf(30, 2, 4)
# Q2 ---------------------------------------------------------------------------
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
X <- c("20b9045.txt")
X <- read.table("20b9045.txt")
X <- view("20b9045.txt")
X <- read.table("20b9045.txt")
X <- read.table("20b9045.txt")
View(X)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 1
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
??optim
pareto_dev <- function(alpha, beta, x) {
sumlogf <- 0
for (i in x)
{logf <- log(pareto_pdf(i, alpha, beta))
sumlogf <- sumlogf + logf
}
D <- -2*sumlogf
print(D)
}
x <- c(1:4)
pareto_dev(10, 0.5, x)
setwd("~/GitHub/a2-ind-r-Alidinie")
view("20b9045.txt")
X <- read.table("20b9045.txt")
X <- read.table("20b9045.txt")
View(X)
